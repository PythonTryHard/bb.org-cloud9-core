From 927c95bab15d7c16518192bc9781da74ac584ad8 Mon Sep 17 00:00:00 2001
From: Robert Nelson <robertcnelson@gmail.com>
Date: Tue, 25 Apr 2017 12:12:17 -0500
Subject: [PATCH 5/5] un home

Signed-off-by: Robert Nelson <robertcnelson@gmail.com>
---
 configs/ide/default.js                                 |  2 +-
 plugins/c9.ide.collab/install.js                       |  6 +++---
 plugins/c9.ide.collab/server/collab-server.js          |  4 ++--
 plugins/c9.ide.configuration/configure.js              | 12 ++++++------
 plugins/c9.ide.editors/metadata.js                     |  2 +-
 plugins/c9.ide.find/find.nak.js                        |  4 ++--
 plugins/c9.ide.installer/install/install.js            |  6 +++---
 plugins/c9.ide.installer/installer.js                  |  2 +-
 plugins/c9.ide.keys/editor.js                          |  4 ++--
 plugins/c9.ide.language.go/worker/go_completer.js      |  4 ++--
 plugins/c9.ide.plugins/debug.js                        | 12 ++++++------
 plugins/c9.ide.plugins/loader.js                       | 18 +++++++++---------
 plugins/c9.ide.plugins/mock/c9.ide.example3/install.js |  6 +++---
 .../templates/plugin.installer/install.js              |  6 +++---
 plugins/c9.ide.plugins/updater-npm.js                  |  6 +++---
 plugins/c9.ide.run.build/build.js                      |  4 ++--
 plugins/c9.ide.run.debug/debuggers/gdb/gdbdebugger.js  |  2 +-
 plugins/c9.ide.run.debug/debuggers/gdb/shim.js         |  2 +-
 plugins/c9.ide.run/run.js                              |  2 +-
 plugins/c9.ide.terminal/predict_echo_test.js           |  2 +-
 plugins/c9.ide.terminal/terminal.js                    |  2 +-
 plugins/c9.ide.terminal/terminal_test.js               |  2 +-
 plugins/c9.ide.test.mocha/mocha.js                     |  2 +-
 plugins/c9.ide.test/all.js                             |  4 ++--
 plugins/c9.ide.test/testrunner.js                      |  4 ++--
 plugins/c9.vfs.server/vfs.connect.standalone.js        |  4 ++--
 26 files changed, 62 insertions(+), 62 deletions(-)

diff --git a/configs/ide/default.js b/configs/ide/default.js
index 14c381eb..869655cc 100644
--- a/configs/ide/default.js
+++ b/configs/ide/default.js
@@ -220,7 +220,7 @@ module.exports = function(options) {
             useHttp: true,
             basePath: workspaceDir,
             installPath: options.installPath,
-            nak: options.nakBin || "~/.c9/node_modules/nak/bin/nak",
+            nak: options.nakBin || "/opt/cloud9/.c9/node_modules/nak/bin/nak",
             node: options.nodeBin,
             local: options.local,
         },
diff --git a/plugins/c9.ide.collab/install.js b/plugins/c9.ide.collab/install.js
index e67b0271..b82b19ee 100644
--- a/plugins/c9.ide.collab/install.js
+++ b/plugins/c9.ide.collab/install.js
@@ -16,14 +16,14 @@ module.exports = function(session, options) {
         {
             "tar.gz": {
                 "url": "https://raw.githubusercontent.com/c9/install/master/packages/sqlite3/linux/sqlite3.tar.gz",
-                "target": "~/.c9/lib/sqlite3",
+                "target": "/opt/cloud9/.c9/lib/sqlite3",
                 "dir": "sqlite3"
             }
         },
         {
             "symlink": {
-                "source": "~/.c9/lib/sqlite3/sqlite3",
-                "target": "~/.c9/bin/sqlite3"
+                "source": "/opt/cloud9/.c9/lib/sqlite3/sqlite3",
+                "target": "/opt/cloud9/.c9/bin/sqlite3"
             }
         }
     ]);
diff --git a/plugins/c9.ide.collab/server/collab-server.js b/plugins/c9.ide.collab/server/collab-server.js
index 2c83f122..116375a6 100644
--- a/plugins/c9.ide.collab/server/collab-server.js
+++ b/plugins/c9.ide.collab/server/collab-server.js
@@ -2914,7 +2914,7 @@ function initSocket(userIds, callback) {
                 });
             },
             function (next) {
-                // Create the directoty ~/.c9/$pid if not existing
+                // Create the directoty /opt/cloud9/.c9/$pid if not existing
                 Fs.mkdir(projectWD, function (err) {
                     if (err && err.code !== "EEXIST")
                         return next(err);
@@ -2922,7 +2922,7 @@ function initSocket(userIds, callback) {
                 });
             },
             function (next) {
-                // Remove the stale socket, if existing at ~/.c9/$pid/collab.sock
+                // Remove the stale socket, if existing at /opt/cloud9/.c9/$pid/collab.sock
                 Fs.unlink(sockPath, function (err) {
                     if (err && err.code !== "ENOENT")
                         return next(err);
diff --git a/plugins/c9.ide.configuration/configure.js b/plugins/c9.ide.configuration/configure.js
index ea5f1938..7bce3aea 100644
--- a/plugins/c9.ide.configuration/configure.js
+++ b/plugins/c9.ide.configuration/configure.js
@@ -73,7 +73,7 @@ define(function(require, exports, module) {
                 group: "General",
                 bindKey: { mac: "Command-Enter", win: "Ctrl-Enter" },
                 isAvailable: function() {
-                    return tabManager.focussedTab && tabManager.focussedTab.path == "~/.c9/init.js";
+                    return tabManager.focussedTab && tabManager.focussedTab.path == "/opt/cloud9/.c9/init.js";
                 },
                 exec: function() {
                     var script = settings.get("user/config/init.js");
@@ -134,11 +134,11 @@ define(function(require, exports, module) {
                     return;
                 }
                 
-                if (path == "~/.c9/init.js") {
+                if (path == "/opt/cloud9/.c9/init.js") {
                     settings.setJson("user/config/init.js", e.document.value);
                     showError("Please reload or press '" + commands.getHotkey("rerunInitScript") + "' for these changes to take effect.");
                 }
-                else if (path == "~/.c9/styles.css") {
+                else if (path == "/opt/cloud9/.c9/styles.css") {
                     var css = e.document.value;
                     settings.setJson("user/config/styles.css", css);
                 }
@@ -258,7 +258,7 @@ define(function(require, exports, module) {
             // without this priority of css rules will be different after
             // saving stylesheet and after reloading cloud9
             
-            css += "\n/*# sourceURL=~/.c9/styles.css */";
+            css += "\n/*# sourceURL=/opt/cloud9/.c9/styles.css */";
             var style = document.createElement("style");
             style.appendChild(document.createTextNode(css));
             document.body.appendChild(style);
@@ -286,7 +286,7 @@ define(function(require, exports, module) {
         
         function editInitJs() {
             var script = settings.get("user/config/init.js") || "";
-            openTab("~/.c9/init.js", script, "javascript", 
+            openTab("/opt/cloud9/.c9/init.js", script, "javascript",
                 "// You can access plugins via the 'services' global variable\n" + 
                 "/*global services, plugin*/\n");
         }
@@ -294,7 +294,7 @@ define(function(require, exports, module) {
         function editStylesCss() {
             // preferences.hide();
             var css = settings.get("user/config/styles.css") || "";
-            openTab("~/.c9/styles.css", css, "css");
+            openTab("/opt/cloud9/.c9/styles.css", css, "css");
         }
         
         function editProjectSettings() {
diff --git a/plugins/c9.ide.editors/metadata.js b/plugins/c9.ide.editors/metadata.js
index 51f149a6..55060b54 100644
--- a/plugins/c9.ide.editors/metadata.js
+++ b/plugins/c9.ide.editors/metadata.js
@@ -571,7 +571,7 @@ define(function(require, exports, module) {
          * for instance has selection, scroll state and scroll history. All this
          * information can be saved to disk by the metadata plugin.
          * 
-         * The metadata is saved in ~/.c9/metadata. The metadata plugin plugs
+         * The metadata is saved in /opt/cloud9/.c9/metadata. The metadata plugin plugs
          * into the tabManager and takes over the loading of the file content
          * so that the loading of the content and the metadata is synchronized.
          * This plugin is also responsible for saving the metadata back to the
diff --git a/plugins/c9.ide.find/find.nak.js b/plugins/c9.ide.find/find.nak.js
index c696345e..4464316f 100644
--- a/plugins/c9.ide.find/find.nak.js
+++ b/plugins/c9.ide.find/find.nak.js
@@ -32,7 +32,7 @@ define(function(require, exports, module) {
         var MAIN_IGNORE = (options.local ? options.installPath : "/.c9") + "/.nakignore";
         var TEMPLATE = require("text!./nakignore-template")
             + "\n" + (options.ignore || "");
-        var NAK = options.nak || "~/.c9/node_modules/nak/bin/nak";
+        var NAK = options.nak || "/opt/cloud9/.c9/node_modules/nak/bin/nak";
         var NODE = options.node;
         
         if (NODE && Array.isArray(NODE)) 
@@ -239,7 +239,7 @@ define(function(require, exports, module) {
                 delete args.list;
                 delete args.follow;
                 
-                vfs.rest("~/.c9/file.listing", {
+                vfs.rest("/opt/cloud9/.c9/file.listing", {
                     method: "GET",
                     query: args,
                     timeout: 120000
diff --git a/plugins/c9.ide.installer/install/install.js b/plugins/c9.ide.installer/install/install.js
index ab394a6a..e697e024 100644
--- a/plugins/c9.ide.installer/install/install.js
+++ b/plugins/c9.ide.installer/install/install.js
@@ -18,7 +18,7 @@ module.exports = function(session, options) {
             {
                 "tar.gz": { 
                     "url": "https://github.com/cloud9ide/sdk-deps-win32/releases/download/v0.0.1/node.tar.gz",
-                    "target": "~/.c9/"
+                    "target": "/opt/cloud9/.c9/"
                 }
             }
         ]);
@@ -29,7 +29,7 @@ module.exports = function(session, options) {
             {
                 "tar.gz": { 
                     "url": "https://github.com/cloud9ide/sdk-deps-win32/releases/download/v0.0.1/msys.tar.gz",
-                    "target": "~/.c9/"
+                    "target": "/opt/cloud9/.c9/"
                 }
             }
         ]);
@@ -42,7 +42,7 @@ module.exports = function(session, options) {
             {
                 "tar.gz": { 
                     "url": "http://nodejs.org/dist/" + NODEVERSION + "/" + nodeName + ".tar.gz",
-                    "target": "~/.c9/node",
+                    "target": "/opt/cloud9/.c9/node",
                     "dir": nodeName
                 }
             },
diff --git a/plugins/c9.ide.installer/installer.js b/plugins/c9.ide.installer/installer.js
index fc45f26c..308b88bc 100644
--- a/plugins/c9.ide.installer/installer.js
+++ b/plugins/c9.ide.installer/installer.js
@@ -282,7 +282,7 @@ define(function(require, exports, module) {
                     var contents = Object.keys(installed).map(function(item) {
                         return item + "@" + installed[item];
                     }).join("\n");
-                    fs.writeFile("~/.c9/installed", contents, function() {
+                    fs.writeFile("/opt/cloud9/.c9/installed", contents, function() {
                         callback && callback(err);
                     });
                 }
diff --git a/plugins/c9.ide.keys/editor.js b/plugins/c9.ide.keys/editor.js
index 40b474d6..8423ab95 100644
--- a/plugins/c9.ide.keys/editor.js
+++ b/plugins/c9.ide.keys/editor.js
@@ -82,7 +82,7 @@ define(function(require, exports, module) {
             save.on("beforeSave", function(e) {
                 if (e.document.meta.keybindings) {
                     // Doing save as, it is now a normal document
-                    if (e.path != "~/.c9/keybindings.settings") {
+                    if (e.path != "/opt/cloud9/.c9/keybindings.settings") {
                         delete e.document.meta.keybindings;
                         return;
                     }
@@ -502,7 +502,7 @@ define(function(require, exports, module) {
             }
             else {
                 tabManager.open({
-                    path: "~/.c9/keybindings.settings",
+                    path: "/opt/cloud9/.c9/keybindings.settings",
                     value: value,
                     active: true,
                     editorType: "ace",
diff --git a/plugins/c9.ide.language.go/worker/go_completer.js b/plugins/c9.ide.language.go/worker/go_completer.js
index d4218f15..ea3af842 100644
--- a/plugins/c9.ide.language.go/worker/go_completer.js
+++ b/plugins/c9.ide.language.go/worker/go_completer.js
@@ -69,7 +69,7 @@ handler.complete = function(doc, fullAst, pos, options, callback) {
             {
                 args: [
                     "-c",
-                    "GOPATH=$HOME/.c9/gocode:$GOPATH ~/.c9/gocode/bin/gocode -f=json autocomplete " + getOffset(doc, pos)
+                    "GOPATH=$HOME/.c9/gocode:$GOPATH /opt/cloud9/.c9/gocode/bin/gocode -f=json autocomplete " + getOffset(doc, pos)
                 ],
                 mode: "stdin",
                 json: true,
@@ -159,7 +159,7 @@ function ensureDaemon(callback) {
         {
             args: [
                 // TODO: cleanup install procedure
-                "-c", "mkdir -p ~/.c9/gocode; GOPATH=$HOME/.c9/gocode go get -u github.com/nsf/gocode && ~/.c9/gocode/bin/gocode"
+                "-c", "mkdir -p /opt/cloud9/.c9/gocode; GOPATH=$HOME/.c9/gocode go get -u github.com/nsf/gocode && /opt/cloud9/.c9/gocode/bin/gocode"
             ]
         },
         function(err, child) {
diff --git a/plugins/c9.ide.plugins/debug.js b/plugins/c9.ide.plugins/debug.js
index 91e150da..a590a40f 100644
--- a/plugins/c9.ide.plugins/debug.js
+++ b/plugins/c9.ide.plugins/debug.js
@@ -82,7 +82,7 @@ define(function(require, exports, module) {
             ui.defineLessLibrary(require("text!../c9.ide.layout.classic/themes/default-" + theme + ".less"), plugin);
             ui.defineLessLibrary(require("text!../c9.ide.layout.classic/less/lesshat.less"), plugin);
             
-            fs.readdir("~/.c9/plugins", function(err, list) {
+            fs.readdir("/opt/cloud9/.c9/plugins", function(err, list) {
                 if (err) return console.error(err);
                 
                 var names = loader.plugins;
@@ -151,7 +151,7 @@ define(function(require, exports, module) {
                     async.parallel([
                         function(next) {
                             // Fetch package.json
-                            fs.readFile("~/.c9/plugins/" + name + "/package.json", function(err, data) {
+                            fs.readFile("/opt/cloud9/.c9/plugins/" + name + "/package.json", function(err, data) {
                                 if (err)
                                     return next(err);
                                 
@@ -178,7 +178,7 @@ define(function(require, exports, module) {
                                     var pluginPath = name + "/" + path;
                                     
                                     // Watch project path
-                                    watch("~/.c9/plugins/" + pluginPath);
+                                    watch("/opt/cloud9/.c9/plugins/" + pluginPath);
                                     var cfg = options.plugins[path];
                                     cfg.packagePath = "plugins/" + name + "/" + path;
                                     cfg.staticPrefix = host + join(base, name);
@@ -204,7 +204,7 @@ define(function(require, exports, module) {
                             });
                         },
                         function(next) {
-                            var path = join("~/.c9/plugins", name);
+                            var path = join("/opt/cloud9/.c9/plugins", name);
                             var rePath = new RegExp("^" + util.escapeRegExp(path.replace(/^~/, c9.home) + "/"), "gm");
                             find.getFileList({ 
                                 path: path, 
@@ -318,11 +318,11 @@ define(function(require, exports, module) {
             var bundleName = pluginName + ".bundle";
             if (!services[bundleName] && type !== "installer") {
                 services[bundleName] = plugin;
-                architect.lut["~/.c9/plugins/" + pluginName] = {
+                architect.lut["/opt/cloud9/.c9/plugins/" + pluginName] = {
                     provides: []
                 };
                 architect.pluginToPackage[bundleName] = {
-                    path: "~/.c9/plugins/" + pluginName,
+                    path: "/opt/cloud9/.c9/plugins/" + pluginName,
                     package: pluginName,
                     version: plugin.version,
                     isAdditionalMode: true
diff --git a/plugins/c9.ide.plugins/loader.js b/plugins/c9.ide.plugins/loader.js
index 08411773..3befa33a 100644
--- a/plugins/c9.ide.plugins/loader.js
+++ b/plugins/c9.ide.plugins/loader.js
@@ -109,16 +109,16 @@ define(function(require, exports, module) {
          * List all packages on disk by scanning `~/.c9` and resolve the
          * detected packages by order of override priority:
          *
-         *  - Developer plugins in `~/.c9/dev/plugins` have the highest
+         *  - Developer plugins in `/opt/cloud9/.c9/dev/plugins` have the highest
          *    priority to allow local development of new functionality without
          *    the risk of having your changes overwritten by any update
          *    mechanism.
          *
-         *  - Managed plugins in `~/.c9/managed/plugins` are pre-installed and
+         *  - Managed plugins in `/opt/cloud9/.c9/managed/plugins` are pre-installed and
          *    updated by the Cloud9 system and have a higher priority that
          *    possibly outdated or unknown packages installed by the user.
          *
-         *  - User-installed in `~/.c9/plugins` plugins installed plugins are
+         *  - User-installed in `/opt/cloud9/.c9/plugins` plugins installed plugins are
          *    the default priority have the lowest priority.
          *
          * @param {Function} callback
@@ -126,9 +126,9 @@ define(function(require, exports, module) {
          */
         function listAllPackages(callback) {
             async.parallel({
-                "plugins": async.apply(listPackages, "~/.c9/plugins"),
-                "managed": async.apply(listPackages, "~/.c9/managed/plugins"),
-                "dev": async.apply(listPackages, "~/.c9/dev/plugins"),
+                "plugins": async.apply(listPackages, "/opt/cloud9/.c9/plugins"),
+                "managed": async.apply(listPackages, "/opt/cloud9/.c9/managed/plugins"),
+                "dev": async.apply(listPackages, "/opt/cloud9/.c9/dev/plugins"),
             }, function(err, packages) {
                 if (err && err.code === "EDISCONNECT") {
                     c9.once("connect", function() {
@@ -141,19 +141,19 @@ define(function(require, exports, module) {
 
                 var resolved = {};
 
-                // default: ~/.c9/plugins
+                // default: /opt/cloud9/.c9/plugins
                 packages.plugins.forEach(function(config) {
                     if (!config) return;
                     resolved[config.name] = config;
                 });
 
-                // high: ~/.c9/managed/plugins
+                // high: /opt/cloud9/.c9/managed/plugins
                 packages.managed.forEach(function(config) {
                     if (!config) return;
                     resolved[config.name] = config;
                 });
 
-                // higher: ~/.c9/dev/plugins
+                // higher: /opt/cloud9/.c9/dev/plugins
                 packages.dev.forEach(function(config) {
                     if (!config) return;
                     resolved[config.name] = config;
diff --git a/plugins/c9.ide.plugins/mock/c9.ide.example3/install.js b/plugins/c9.ide.plugins/mock/c9.ide.example3/install.js
index 7104a4db..f66a7176 100644
--- a/plugins/c9.ide.plugins/mock/c9.ide.example3/install.js
+++ b/plugins/c9.ide.plugins/mock/c9.ide.example3/install.js
@@ -15,14 +15,14 @@ module.exports = function(session, options) {
         {
             "tar.gz": {
                 "url": "https://raw.githubusercontent.com/c9/install/master/packages/sqlite3/linux/sqlite3.tar.gz",
-                "target": "~/.c9/lib/sqlite3",
+                "target": "/opt/cloud9/.c9/lib/sqlite3",
                 "dir": "sqlite3"
             }
         },
         {
             "symlink": {
-                "source": "~/.c9/lib/sqlite3/sqlite3",
-                "target": "~/.c9/bin/sqlite3"
+                "source": "/opt/cloud9/.c9/lib/sqlite3/sqlite3",
+                "target": "/opt/cloud9/.c9/bin/sqlite3"
             }
         }
     ]);
diff --git a/plugins/c9.ide.plugins/templates/plugin.installer/install.js b/plugins/c9.ide.plugins/templates/plugin.installer/install.js
index 7104a4db..f66a7176 100644
--- a/plugins/c9.ide.plugins/templates/plugin.installer/install.js
+++ b/plugins/c9.ide.plugins/templates/plugin.installer/install.js
@@ -15,14 +15,14 @@ module.exports = function(session, options) {
         {
             "tar.gz": {
                 "url": "https://raw.githubusercontent.com/c9/install/master/packages/sqlite3/linux/sqlite3.tar.gz",
-                "target": "~/.c9/lib/sqlite3",
+                "target": "/opt/cloud9/.c9/lib/sqlite3",
                 "dir": "sqlite3"
             }
         },
         {
             "symlink": {
-                "source": "~/.c9/lib/sqlite3/sqlite3",
-                "target": "~/.c9/bin/sqlite3"
+                "source": "/opt/cloud9/.c9/lib/sqlite3/sqlite3",
+                "target": "/opt/cloud9/.c9/bin/sqlite3"
             }
         }
     ]);
diff --git a/plugins/c9.ide.plugins/updater-npm.js b/plugins/c9.ide.plugins/updater-npm.js
index 13d89abc..82108c52 100644
--- a/plugins/c9.ide.plugins/updater-npm.js
+++ b/plugins/c9.ide.plugins/updater-npm.js
@@ -249,7 +249,7 @@ define(function(require, exports, module) {
         }
 
         /**
-         * Build the symbolic links from `~/.c9/plugins` to the managed plugins.
+         * Build the symbolic links from `/opt/cloud9/.c9/plugins` to the managed plugins.
          *
          * @param {String[]} pkgs  A list of package names to link.
          *
@@ -266,7 +266,7 @@ define(function(require, exports, module) {
         }
 
         /**
-         * Removes symbolic links from the `~/.c9/managed/plugins` folder.
+         * Removes symbolic links from the `/opt/cloud9/.c9/managed/plugins` folder.
          */
         function fsRmLinks(callback) {
             debug("find", { args: [ managedPluginsPath, "-maxdepth", "1", "-type", "l", "-exec", "rm", "{}", ";" ]});
@@ -287,7 +287,7 @@ define(function(require, exports, module) {
         }
 
         /**
-         * Create a symbolic link in `~/.c9/plugins` pointing to the given
+         * Create a symbolic link in `/opt/cloud9/.c9/plugins` pointing to the given
          * plugin path.
          *
          * @param {String} pkgPath  Path to the source package folder
diff --git a/plugins/c9.ide.run.build/build.js b/plugins/c9.ide.run.build/build.js
index 3511c4aa..eb348b10 100644
--- a/plugins/c9.ide.run.build/build.js
+++ b/plugins/c9.ide.run.build/build.js
@@ -34,7 +34,7 @@ define(function(require, module, exports) {
                     ["path", builderPath]
                 ]);
                 
-                // @todo Could consider adding a watcher to ~/.c9/runners
+                // @todo Could consider adding a watcher to /opt/cloud9/.c9/runners
                 listBuilders(function(err, files) {
                     files.forEach(function(file) {
                         if (!builders[file]) {
@@ -384,7 +384,7 @@ define(function(require, module, exports) {
              * A builder is a JSON file that describes how a certain file can
              * be executed. The JSON file format is based on and compatible with
              * the sublime build scripts. Besides the build in builders, the
-             * user can store builders in ~/.c9/builders. This list will contain
+             * user can store builders in /opt/cloud9/.c9/builders. This list will contain
              * both the user's builders as well as the build-in builders.
              * @param {Function} callback           Called when the builders are retrieved
              * @param {Error}    callback.err       The error object if an error occurred.
diff --git a/plugins/c9.ide.run.debug/debuggers/gdb/gdbdebugger.js b/plugins/c9.ide.run.debug/debuggers/gdb/gdbdebugger.js
index 09d7e76d..33739135 100755
--- a/plugins/c9.ide.run.debug/debuggers/gdb/gdbdebugger.js
+++ b/plugins/c9.ide.run.debug/debuggers/gdb/gdbdebugger.js
@@ -63,7 +63,7 @@ define(function(require, exports, module) {
             debug.registerDebugger(TYPE, plugin);
             
             // writeFile root is workspace directory, unless given ~
-            var shimPath = "~/.c9/bin/c9gdbshim.js";
+            var shimPath = "/opt/cloud9/.c9/bin/c9gdbshim.js";
             var shim = require("text!./shim.js");
             fs.exists(shimPath, function(exists) {
                 if (exists) return; // TODO use localfs extend when it is ready
diff --git a/plugins/c9.ide.run.debug/debuggers/gdb/shim.js b/plugins/c9.ide.run.debug/debuggers/gdb/shim.js
index 1a2f33b0..442b7f98 100755
--- a/plugins/c9.ide.run.debug/debuggers/gdb/shim.js
+++ b/plugins/c9.ide.run.debug/debuggers/gdb/shim.js
@@ -18,7 +18,7 @@ function printUsage() {
         "  bp: warn when BPs are sent but none are set (default true)",
         "  depth: maximum stack depth computed (default 50)",
         "  gdb: port that GDB client and server communicate (default 15470)",
-        "  proxy: port or socket that this shim listens for connections (default ~/.c9/gdbdebugger.socket)",
+        "  proxy: port or socket that this shim listens for connections (default /opt/cloud9/.c9/gdbdebugger.socket)",
         "  BIN: the binary to debug with GDB",
         "  args: optional arguments for BIN\n"
     ];
diff --git a/plugins/c9.ide.run/run.js b/plugins/c9.ide.run/run.js
index e288b88b..ed3f8d1a 100644
--- a/plugins/c9.ide.run/run.js
+++ b/plugins/c9.ide.run/run.js
@@ -53,7 +53,7 @@ define(function(require, module, exports) {
                     ["path", runnerPath]
                 ]);
             }, handle);
-            // @todo Could consider adding a watcher to ~/.c9/runners
+            // @todo Could consider adding a watcher to /opt/cloud9/.c9/runners
         }
         
         /***** Methods *****/
diff --git a/plugins/c9.ide.terminal/predict_echo_test.js b/plugins/c9.ide.terminal/predict_echo_test.js
index 4213e66f..81c22715 100644
--- a/plugins/c9.ide.terminal/predict_echo_test.js
+++ b/plugins/c9.ide.terminal/predict_echo_test.js
@@ -120,7 +120,7 @@ require(["lib/architect/architect", "lib/chai/chai", "/vfs-root", "ace/test/asse
                 predictor.$setTestTimeouts();
                 predictor.DEBUG = true;
                 
-                proc.execFile("~/.c9/bin/tmux", { args: ["-L", "cloud9test", "kill-server"]}, function(err) {
+                proc.execFile("/opt/cloud9/.c9/bin/tmux", { args: ["-L", "cloud9test", "kill-server"]}, function(err) {
                     tabs.once("ready", function() {
                         tabs.getPanes()[0].focus();
                         openTerminal(done);
diff --git a/plugins/c9.ide.terminal/terminal.js b/plugins/c9.ide.terminal/terminal.js
index 6fcbcda4..3cc64548 100644
--- a/plugins/c9.ide.terminal/terminal.js
+++ b/plugins/c9.ide.terminal/terminal.js
@@ -45,7 +45,7 @@ define(function(require, exports, module) {
         var handleEmit = handle.getEmitter();
         handleEmit.setMaxListeners(1000);
 
-        var TMUX = options.tmux || "~/.c9/bin/tmux";
+        var TMUX = options.tmux || "/opt/cloud9/.c9/bin/tmux";
         var VFSROOT = options.root || "~";
         var TMPDIR = options.tmpdir;
         
diff --git a/plugins/c9.ide.terminal/terminal_test.js b/plugins/c9.ide.terminal/terminal_test.js
index 3e712175..949fedab 100644
--- a/plugins/c9.ide.terminal/terminal_test.js
+++ b/plugins/c9.ide.terminal/terminal_test.js
@@ -81,7 +81,7 @@ require(["lib/architect/architect", "lib/chai/chai", "/vfs-root"], function (arc
       
                 document.body.style.marginBottom = "33%";
                 
-                proc.execFile("~/.c9/bin/tmux", { args: ["-L", "cloud9test", "kill-server"]}, function(err) {
+                proc.execFile("/opt/cloud9/.c9/bin/tmux", { args: ["-L", "cloud9test", "kill-server"]}, function(err) {
                     tabs.once("ready", function() {
                         tabs.getPanes()[0].focus();
                         done();
diff --git a/plugins/c9.ide.test.mocha/mocha.js b/plugins/c9.ide.test.mocha/mocha.js
index 77acf236..4df21824 100644
--- a/plugins/c9.ide.test.mocha/mocha.js
+++ b/plugins/c9.ide.test.mocha/mocha.js
@@ -198,7 +198,7 @@ define(function(require, exports, module) {
             var path = join(c9.workspaceDir, fileNode.path);
             args.push(path);
             
-            var coveragePath = "~/.c9/coverage/run" + (++uniqueId);
+            var coveragePath = "/opt/cloud9/.c9/coverage/run" + (++uniqueId);
             if (withCodeCoverage) {
                 exec = "istanbul";
                 args.unshift("cover", "--print", "none", "--report", 
diff --git a/plugins/c9.ide.test/all.js b/plugins/c9.ide.test/all.js
index 0b8bb434..6f8d1432 100644
--- a/plugins/c9.ide.test/all.js
+++ b/plugins/c9.ide.test/all.js
@@ -880,13 +880,13 @@ define(function(require, exports, module) {
         }
         
         function clearCache(runner, callback) {
-            fs.rmdir("~/.c9/cache/" + runner.name, { recursive: true }, function() {
+            fs.rmdir("/opt/cloud9/.c9/cache/" + runner.name, { recursive: true }, function() {
                 callback && callback.apply(this, arguments);
             });
         }
         
         function writeToCache(runner, path, cache, callback) {
-            fs.writeFile("~/.c9/cache/" + runner.name 
+            fs.writeFile("/opt/cloud9/.c9/cache/" + runner.name
               + "/" + path.replace(/\//g, "\\"), cache, function(err) {
                 callback && callback(err);
             });
diff --git a/plugins/c9.ide.test/testrunner.js b/plugins/c9.ide.test/testrunner.js
index 6a63ef42..ea40cabb 100644
--- a/plugins/c9.ide.test/testrunner.js
+++ b/plugins/c9.ide.test/testrunner.js
@@ -280,7 +280,7 @@ define(function(require, module, exports) {
             }
             
             function fetchFromCache(callback) {
-                fs.readFile("~/.c9/cache/" + plugin.name, function(err, data) {
+                fs.readFile("/opt/cloud9/.c9/cache/" + plugin.name, function(err, data) {
                     if (err)
                         return callback(err);
                     
@@ -290,7 +290,7 @@ define(function(require, module, exports) {
             }
             
             function writeToCache(cache, callback) {
-                fs.writeFile("~/.c9/cache/" + plugin.name + "/index", cache, function(err) {
+                fs.writeFile("/opt/cloud9/.c9/cache/" + plugin.name + "/index", cache, function(err) {
                     callback && callback(err);
                 });
             }
diff --git a/plugins/c9.vfs.server/vfs.connect.standalone.js b/plugins/c9.vfs.server/vfs.connect.standalone.js
index 51096d8a..53db219d 100644
--- a/plugins/c9.vfs.server/vfs.connect.standalone.js
+++ b/plugins/c9.vfs.server/vfs.connect.standalone.js
@@ -39,7 +39,7 @@ define(function(require, exports, module) {
                 debug: options.debug,
                 homeDir: process.env.HOME,
                 projectDir: projectOptions.workspaceDir,
-                nakBin: options.nakBin || (process.env.HOME + "/.c9/node_modules/.bin/nak"),
+                nakBin: options.nakBin || ("/opt/cloud9/.c9/node_modules/.bin/nak"),
                 nodeBin: options.nodeBin,
                 tmuxBin: options.tmuxBin
             };
@@ -75,4 +75,4 @@ define(function(require, exports, module) {
             "vfs.connect": plugin
         });
     }
-});
\ No newline at end of file
+});
-- 
2.11.0

